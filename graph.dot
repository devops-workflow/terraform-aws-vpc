digraph {
	compound = "true"
	newrank = "true"
	subgraph "root" {
		"[root] aws_db_subnet_group.internal_db" [label = "aws_db_subnet_group.internal_db", shape = "box"]
		"[root] aws_default_network_acl.default" [label = "aws_default_network_acl.default", shape = "box"]
		"[root] aws_elasticache_subnet_group.internal_ec" [label = "aws_elasticache_subnet_group.internal_ec", shape = "box"]
		"[root] aws_route.igw" [label = "aws_route.igw", shape = "box"]
		"[root] aws_route.route_external_ctidev_vpc" [label = "aws_route.route_external_ctidev_vpc", shape = "box"]
		"[root] aws_route.route_internal_ctidev_vpc" [label = "aws_route.route_internal_ctidev_vpc", shape = "box"]
		"[root] aws_route.route_internal_nat" [label = "aws_route.route_internal_nat", shape = "box"]
		"[root] aws_route_table_association.internal_db" [label = "aws_route_table_association.internal_db", shape = "box"]
		"[root] aws_route_table_association.internal_ec" [label = "aws_route_table_association.internal_ec", shape = "box"]
		"[root] aws_subnet.subnet_internal_db" [label = "aws_subnet.subnet_internal_db", shape = "box"]
		"[root] aws_subnet.subnet_internal_ec" [label = "aws_subnet.subnet_internal_ec", shape = "box"]
		"[root] aws_vpc.vpc" [label = "aws_vpc.vpc", shape = "box"]
		"[root] aws_vpc_peering_connection.ctidev" [label = "aws_vpc_peering_connection.ctidev", shape = "box"]
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" [label = "module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts", shape = "box"]
		"[root] module.dhcp-internal.aws_vpc_dhcp_options_association.vpc_dhcp_options_association" [label = "module.dhcp-internal.aws_vpc_dhcp_options_association.vpc_dhcp_options_association", shape = "box"]
		"[root] module.dhcp-internal.provider.aws" [label = "module.dhcp-internal.provider.aws", shape = "diamond"]
		"[root] module.gateways.aws_eip.eip_nat" [label = "module.gateways.aws_eip.eip_nat", shape = "box"]
		"[root] module.gateways.aws_internet_gateway.igw" [label = "module.gateways.aws_internet_gateway.igw", shape = "box"]
		"[root] module.gateways.aws_nat_gateway.nat" [label = "module.gateways.aws_nat_gateway.nat", shape = "box"]
		"[root] module.gateways.provider.aws" [label = "module.gateways.provider.aws", shape = "diamond"]
		"[root] module.subnet_external.aws_route_table.subnet" [label = "module.subnet_external.aws_route_table.subnet", shape = "box"]
		"[root] module.subnet_external.aws_route_table_association.subnet" [label = "module.subnet_external.aws_route_table_association.subnet", shape = "box"]
		"[root] module.subnet_external.aws_subnet.subnet" [label = "module.subnet_external.aws_subnet.subnet", shape = "box"]
		"[root] module.subnet_external.provider.aws" [label = "module.subnet_external.provider.aws", shape = "diamond"]
		"[root] module.subnet_internal.aws_route_table.subnet" [label = "module.subnet_internal.aws_route_table.subnet", shape = "box"]
		"[root] module.subnet_internal.aws_route_table_association.subnet" [label = "module.subnet_internal.aws_route_table_association.subnet", shape = "box"]
		"[root] module.subnet_internal.aws_subnet.subnet" [label = "module.subnet_internal.aws_subnet.subnet", shape = "box"]
		"[root] module.subnet_internal.provider.aws" [label = "module.subnet_internal.provider.aws", shape = "diamond"]
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" [label = "module.vpn_corp.aws_vpn_connection.vpn_corp", shape = "box"]
		"[root] module.vpn_corp.aws_vpn_connection_route.vpn_route_corp" [label = "module.vpn_corp.aws_vpn_connection_route.vpn_route_corp", shape = "box"]
		"[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp" [label = "module.vpn_corp.aws_vpn_gateway.vpn_gw_corp", shape = "box"]
		"[root] module.vpn_corp.provider.aws" [label = "module.vpn_corp.provider.aws", shape = "diamond"]
		"[root] provider.aws" [label = "provider.aws", shape = "diamond"]
		"[root] aws_db_subnet_group.internal_db" -> "[root] module.subnet_internal.output.subnet_ids"
		"[root] aws_default_network_acl.default" -> "[root] aws_vpc.vpc"
		"[root] aws_elasticache_subnet_group.internal_ec" -> "[root] aws_subnet.subnet_internal_ec"
		"[root] aws_route.igw" -> "[root] module.gateways.output.internet_gateway"
		"[root] aws_route.igw" -> "[root] module.subnet_external.aws_route_table_association.subnet"
		"[root] aws_route.igw" -> "[root] module.subnet_external.output.availability_zones"
		"[root] aws_route.igw" -> "[root] module.subnet_external.output.subnet_ids"
		"[root] aws_route.igw" -> "[root] module.subnet_external.output.subnet_route_table_ids"
		"[root] aws_route.route_external_ctidev_vpc" -> "[root] aws_vpc_peering_connection.ctidev"
		"[root] aws_route.route_external_ctidev_vpc" -> "[root] module.subnet_external.output.subnet_route_table_ids"
		"[root] aws_route.route_external_ctidev_vpc" -> "[root] var.ctidev_vpc_cidr"
		"[root] aws_route.route_internal_ctidev_vpc" -> "[root] aws_vpc_peering_connection.ctidev"
		"[root] aws_route.route_internal_ctidev_vpc" -> "[root] module.subnet_internal.output.subnet_route_table_ids"
		"[root] aws_route.route_internal_ctidev_vpc" -> "[root] var.ctidev_vpc_cidr"
		"[root] aws_route.route_internal_nat" -> "[root] module.gateways.output.nat_gateway_ids"
		"[root] aws_route.route_internal_nat" -> "[root] module.subnet_internal.output.subnet_route_table_ids"
		"[root] aws_route_table_association.internal_db" -> "[root] aws_subnet.subnet_internal_db"
		"[root] aws_route_table_association.internal_db" -> "[root] module.subnet_internal.output.subnet_route_table_ids"
		"[root] aws_route_table_association.internal_ec" -> "[root] aws_subnet.subnet_internal_ec"
		"[root] aws_route_table_association.internal_ec" -> "[root] module.subnet_internal.output.subnet_route_table_ids"
		"[root] aws_subnet.subnet_internal_db" -> "[root] aws_vpc.vpc"
		"[root] aws_subnet.subnet_internal_db" -> "[root] var.availability_zones"
		"[root] aws_subnet.subnet_internal_ec" -> "[root] aws_vpc.vpc"
		"[root] aws_subnet.subnet_internal_ec" -> "[root] var.availability_zones"
		"[root] aws_vpc.vpc" -> "[root] provider.aws"
		"[root] aws_vpc.vpc" -> "[root] var.cidr"
		"[root] aws_vpc.vpc" -> "[root] var.environment"
		"[root] aws_vpc.vpc" -> "[root] var.name"
		"[root] aws_vpc.vpc" -> "[root] var.namespaced"
		"[root] aws_vpc.vpc" -> "[root] var.tags"
		"[root] aws_vpc_peering_connection.ctidev" -> "[root] aws_vpc.vpc"
		"[root] aws_vpc_peering_connection.ctidev" -> "[root] var.citdev_vpc_id"
		"[root] aws_vpc_peering_connection.ctidev" -> "[root] var.ctidev_acc_id"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.provider.aws"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.domain_controllers"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.domain_name"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.environment"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.name"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.namespaced"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts" -> "[root] module.dhcp-internal.var.tags"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options_association.vpc_dhcp_options_association" -> "[root] module.dhcp-internal.aws_vpc_dhcp_options.dhcp_opts"
		"[root] module.dhcp-internal.aws_vpc_dhcp_options_association.vpc_dhcp_options_association" -> "[root] module.dhcp-internal.var.vpc_id"
		"[root] module.dhcp-internal.provider.aws" -> "[root] provider.aws"
		"[root] module.dhcp-internal.var.environment" -> "[root] var.environment"
		"[root] module.dhcp-internal.var.vpc_id" -> "[root] aws_vpc.vpc"
		"[root] module.gateways.aws_eip.eip_nat" -> "[root] module.gateways.provider.aws"
		"[root] module.gateways.aws_eip.eip_nat" -> "[root] module.gateways.var.num_of_azs"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.provider.aws"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.var.environment"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.var.name"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.var.namespaced"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.var.tags"
		"[root] module.gateways.aws_internet_gateway.igw" -> "[root] module.gateways.var.vpc_id"
		"[root] module.gateways.aws_nat_gateway.nat" -> "[root] module.gateways.aws_eip.eip_nat"
		"[root] module.gateways.aws_nat_gateway.nat" -> "[root] module.gateways.var.public_subnet_ids"
		"[root] module.gateways.output.internet_gateway" -> "[root] module.gateways.aws_internet_gateway.igw"
		"[root] module.gateways.output.nat_gateway_ids" -> "[root] module.gateways.aws_nat_gateway.nat"
		"[root] module.gateways.output.nat_ips" -> "[root] module.gateways.aws_eip.eip_nat"
		"[root] module.gateways.provider.aws" -> "[root] provider.aws"
		"[root] module.gateways.var.environment" -> "[root] var.environment"
		"[root] module.gateways.var.public_subnet_ids" -> "[root] module.subnet_external.output.subnet_ids"
		"[root] module.gateways.var.vpc_id" -> "[root] aws_vpc.vpc"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.provider.aws"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.azs"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.environment"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.name"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.namespaced"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.propagate_vgws"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.tags"
		"[root] module.subnet_external.aws_route_table.subnet" -> "[root] module.subnet_external.var.vpc_id"
		"[root] module.subnet_external.aws_route_table_association.subnet" -> "[root] module.subnet_external.aws_route_table.subnet"
		"[root] module.subnet_external.aws_route_table_association.subnet" -> "[root] module.subnet_external.aws_subnet.subnet"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.provider.aws"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.azs"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.cidr_add_bits"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.cidr_block"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.environment"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.map_public_ip_on_launch"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.name"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.namespaced"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.subnet_offset"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.tags"
		"[root] module.subnet_external.aws_subnet.subnet" -> "[root] module.subnet_external.var.vpc_id"
		"[root] module.subnet_external.output.availability_zones" -> "[root] module.subnet_external.aws_subnet.subnet"
		"[root] module.subnet_external.output.subnet_ids" -> "[root] module.subnet_external.aws_subnet.subnet"
		"[root] module.subnet_external.output.subnet_route_table_ids" -> "[root] module.subnet_external.aws_route_table.subnet"
		"[root] module.subnet_external.provider.aws" -> "[root] provider.aws"
		"[root] module.subnet_external.var.azs" -> "[root] var.availability_zones"
		"[root] module.subnet_external.var.cidr_block" -> "[root] aws_vpc.vpc"
		"[root] module.subnet_external.var.environment" -> "[root] var.environment"
		"[root] module.subnet_external.var.propagate_vgws" -> "[root] module.vpn_corp.output.corp_vpn_gtwy_id"
		"[root] module.subnet_external.var.tags" -> "[root] var.tags"
		"[root] module.subnet_external.var.vpc_id" -> "[root] aws_vpc.vpc"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.provider.aws"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.azs"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.environment"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.name"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.namespaced"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.propagate_vgws"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.tags"
		"[root] module.subnet_internal.aws_route_table.subnet" -> "[root] module.subnet_internal.var.vpc_id"
		"[root] module.subnet_internal.aws_route_table_association.subnet" -> "[root] module.subnet_internal.aws_route_table.subnet"
		"[root] module.subnet_internal.aws_route_table_association.subnet" -> "[root] module.subnet_internal.aws_subnet.subnet"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.provider.aws"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.azs"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.cidr_add_bits"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.cidr_block"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.environment"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.map_public_ip_on_launch"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.name"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.namespaced"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.subnet_offset"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.tags"
		"[root] module.subnet_internal.aws_subnet.subnet" -> "[root] module.subnet_internal.var.vpc_id"
		"[root] module.subnet_internal.output.availability_zones" -> "[root] module.subnet_internal.aws_subnet.subnet"
		"[root] module.subnet_internal.output.subnet_ids" -> "[root] module.subnet_internal.aws_subnet.subnet"
		"[root] module.subnet_internal.output.subnet_route_table_ids" -> "[root] module.subnet_internal.aws_route_table.subnet"
		"[root] module.subnet_internal.provider.aws" -> "[root] provider.aws"
		"[root] module.subnet_internal.var.azs" -> "[root] var.availability_zones"
		"[root] module.subnet_internal.var.cidr_block" -> "[root] aws_vpc.vpc"
		"[root] module.subnet_internal.var.environment" -> "[root] var.environment"
		"[root] module.subnet_internal.var.propagate_vgws" -> "[root] module.vpn_corp.output.corp_vpn_gtwy_id"
		"[root] module.subnet_internal.var.tags" -> "[root] var.tags"
		"[root] module.subnet_internal.var.vpc_id" -> "[root] aws_vpc.vpc"
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" -> "[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp"
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" -> "[root] module.vpn_corp.var.corp_customer_gateway_id"
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" -> "[root] module.vpn_corp.var.name"
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" -> "[root] module.vpn_corp.var.namespaced"
		"[root] module.vpn_corp.aws_vpn_connection.vpn_corp" -> "[root] module.vpn_corp.var.tags"
		"[root] module.vpn_corp.aws_vpn_connection_route.vpn_route_corp" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.aws_vpn_connection_route.vpn_route_corp" -> "[root] module.vpn_corp.var.dest_cidrs"
		"[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp" -> "[root] module.vpn_corp.provider.aws"
		"[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp" -> "[root] module.vpn_corp.var.environment"
		"[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp" -> "[root] module.vpn_corp.var.vpc_id"
		"[root] module.vpn_corp.output.corp_gtwy_id" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_gtwy_id" -> "[root] module.vpn_corp.aws_vpn_gateway.vpn_gw_corp"
		"[root] module.vpn_corp.output.corp_vpn_id" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_tun1_ip" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_tun1_key" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_tun2_ip" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_tun2_key" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.output.corp_vpn_type" -> "[root] module.vpn_corp.aws_vpn_connection.vpn_corp"
		"[root] module.vpn_corp.provider.aws" -> "[root] provider.aws"
		"[root] module.vpn_corp.var.corp_customer_gateway_id" -> "[root] var.corp_customer_gateway_id"
		"[root] module.vpn_corp.var.dest_cidrs" -> "[root] var.corp_vpn_cidr"
		"[root] module.vpn_corp.var.environment" -> "[root] var.environment"
		"[root] module.vpn_corp.var.vpc_id" -> "[root] aws_vpc.vpc"
		"[root] output.availability_zones" -> "[root] module.subnet_external.output.availability_zones"
		"[root] output.corp_gtwy_id" -> "[root] module.vpn_corp.output.corp_gtwy_id"
		"[root] output.corp_vpn_gtwy_id" -> "[root] module.vpn_corp.output.corp_vpn_gtwy_id"
		"[root] output.corp_vpn_id" -> "[root] module.vpn_corp.output.corp_vpn_id"
		"[root] output.db_subnet_group" -> "[root] aws_db_subnet_group.internal_db"
		"[root] output.db_subnet_ids" -> "[root] aws_subnet.subnet_internal_db"
		"[root] output.ec_subnet_group" -> "[root] aws_elasticache_subnet_group.internal_ec"
		"[root] output.ec_subnet_ids" -> "[root] aws_subnet.subnet_internal_ec"
		"[root] output.external_route_table_ids" -> "[root] module.subnet_external.output.subnet_route_table_ids"
		"[root] output.external_subnets" -> "[root] module.subnet_external.output.subnet_ids"
		"[root] output.id" -> "[root] aws_vpc.vpc"
		"[root] output.internal_nat_ips" -> "[root] module.gateways.output.nat_ips"
		"[root] output.internal_route_table_ids" -> "[root] module.subnet_internal.output.subnet_route_table_ids"
		"[root] output.internal_subnets" -> "[root] module.subnet_internal.output.subnet_ids"
		"[root] output.internet_gateway" -> "[root] module.gateways.output.internet_gateway"
		"[root] output.nat_gateway_ids" -> "[root] module.gateways.output.nat_gateway_ids"
		"[root] output.security_group" -> "[root] aws_vpc.vpc"
		"[root] root" -> "[root] aws_default_network_acl.default"
		"[root] root" -> "[root] aws_route.igw"
		"[root] root" -> "[root] aws_route.route_external_ctidev_vpc"
		"[root] root" -> "[root] aws_route.route_internal_ctidev_vpc"
		"[root] root" -> "[root] aws_route.route_internal_nat"
		"[root] root" -> "[root] aws_route_table_association.internal_db"
		"[root] root" -> "[root] aws_route_table_association.internal_ec"
		"[root] root" -> "[root] module.dhcp-internal.aws_vpc_dhcp_options_association.vpc_dhcp_options_association"
		"[root] root" -> "[root] module.subnet_internal.aws_route_table_association.subnet"
		"[root] root" -> "[root] module.subnet_internal.output.availability_zones"
		"[root] root" -> "[root] module.vpn_corp.aws_vpn_connection_route.vpn_route_corp"
		"[root] root" -> "[root] module.vpn_corp.output.corp_vpn_tun1_ip"
		"[root] root" -> "[root] module.vpn_corp.output.corp_vpn_tun1_key"
		"[root] root" -> "[root] module.vpn_corp.output.corp_vpn_tun2_ip"
		"[root] root" -> "[root] module.vpn_corp.output.corp_vpn_tun2_key"
		"[root] root" -> "[root] module.vpn_corp.output.corp_vpn_type"
		"[root] root" -> "[root] output.availability_zones"
		"[root] root" -> "[root] output.corp_gtwy_id"
		"[root] root" -> "[root] output.corp_vpn_gtwy_id"
		"[root] root" -> "[root] output.corp_vpn_id"
		"[root] root" -> "[root] output.db_subnet_group"
		"[root] root" -> "[root] output.db_subnet_ids"
		"[root] root" -> "[root] output.ec_subnet_group"
		"[root] root" -> "[root] output.ec_subnet_ids"
		"[root] root" -> "[root] output.external_route_table_ids"
		"[root] root" -> "[root] output.external_subnets"
		"[root] root" -> "[root] output.id"
		"[root] root" -> "[root] output.internal_nat_ips"
		"[root] root" -> "[root] output.internal_route_table_ids"
		"[root] root" -> "[root] output.internal_subnets"
		"[root] root" -> "[root] output.internet_gateway"
		"[root] root" -> "[root] output.nat_gateway_ids"
		"[root] root" -> "[root] output.security_group"
		"[root] root" -> "[root] var.external_subnets"
		"[root] root" -> "[root] var.internal_subnets"
	}
}

